import sys
sys.setrecursionlimit(1000000000)
def dfs(x, y, mid):
    global num
    if visited[x][y]:
        return
    visited[x][y] = True
    if way[x][y] == 1:
        #print(x, y)
        num += 1
    try:
        if abs(grid[x+1][y]-grid[x][y]) <= mid:
            dfs(x+1, y, mid)
    except:
        pass
    try:
        if x-1 >= 0 and abs(grid[x-1][y]-grid[x][y]) <= mid:
            dfs(x-1, y, mid)
    except:
        pass
    try:
        if abs(grid[x][y+1]-grid[x][y]) <= mid:
            dfs(x, y+1, mid)
    except:
        pass
    try:
        if y-1 >= 0 and abs(grid[x][y-1]-grid[x][y]) <= mid:
            dfs(x, y-1, mid)
    except:
        pass
fin = open('ccski.in')
n, m = map(int, fin.readline().split())
grid = []
for i in range(n):
    grid.append(list(map(int, fin.readline().split())))
way = []
x, y = 0, 0
count = 0
for i in range(n):
    a = list(map(int, fin.readline().split()))
    way.append(a)
    if a.count(1) != 0:
        x, y = i, a.index(1)
        count += a.count(1)

lo, hi = 0, max(map(max, grid))-min(map(min, grid))
#print(hi, x, y)
ans = 100000000000000
while lo <= hi:
    visited = [[False for i in range(m)] for j in range(n)]
    mid = lo + (hi-lo)//2
    num = 0
    dfs(x, y, mid)
    if num == count:
        ans = min(ans, mid)
        hi = mid-1
    else:
        lo = mid+1
with open('ccski.out', 'w') as f:
    f.write(str(ans) + '\n')
